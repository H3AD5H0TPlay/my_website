---
import { translations } from '../utils/translations';

interface Props {
  title: string;
  description: string;
  tags: string[];
  link?: string;
}

const { title, description, tags, link } = Astro.props;
---

<div class="relative bg-cyber-black/30 backdrop-blur-sm p-6 border border-cyber-red/20 rounded-xl hover:border-cyber-red/40 transition-all duration-300 hover:scale-[1.01] group">
  <div class="absolute top-0 right-0 w-16 h-16 border-t border-r border-cyber-red/40 rounded-tr-xl"></div>
  <div class="absolute bottom-0 left-0 w-16 h-16 border-b border-l border-cyber-red/40 rounded-bl-xl"></div>
  <div class="relative z-10">
    <h3 class="text-xl font-cyber font-bold mb-3 text-cyber-red group-hover:text-cyber-red-bright transition-colors">{title}</h3>
    <p class="text-white/80 mb-4 font-cyber">{description}</p>
    <div class="flex flex-wrap gap-2 mb-4">
      {tags.map((tag) => (
        <span class="bg-cyber-black/40 text-white/90 px-3 py-1 rounded-md text-sm border border-cyber-red/10 hover:border-cyber-red/30 transition-colors font-cyber">
          {tag}
        </span>
      ))}
    </div>
    {link && (
      <a
        href={link}
        target="_blank"
        rel="noopener noreferrer"
        class="inline-flex items-center group/link bg-cyber-black/40 px-4 py-2 rounded-lg border border-cyber-red/10 hover:border-cyber-red/30 transition-all duration-300 font-cyber hover:scale-105"
      >
        <span class="text-white group-hover/link:text-cyber-red transition-colors">{translations.projects.viewProject}</span>
        <span class="ml-2 transform transition-transform group-hover/link:translate-x-1 text-cyber-red">â†’</span>
      </a>
    )}
  </div>
</div>
</div>